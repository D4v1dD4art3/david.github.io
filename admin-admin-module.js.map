{"version":3,"sources":["./src/app/admin/admin-routing.module.ts","./src/app/admin/components/skills/skills.component.ts","./src/app/admin/components/skills/skills.component.html","./src/app/admin/sidebar/sidebar.component.ts","./src/app/admin/sidebar/sidebar.component.html","./src/app/core/guards/auth.guard.ts","./src/app/core/services/projects/project.service.ts","./src/app/admin/components/add-project/add-project.component.ts","./src/app/admin/components/add-project/add-project.component.html","./src/app/admin/components/contact/contact.component.ts","./src/app/admin/components/contact/contact.component.html","./src/app/admin/components/dashboard/dashboard.component.ts","./src/app/admin/components/dashboard/dashboard.component.html","./src/app/admin/admin.module.ts","./src/app/admin/components/edit-project/edit-project.component.ts","./src/app/admin/components/edit-project/edit-project.component.html","./src/app/admin/components/projects/projects.component.ts","./src/app/admin/components/projects/projects.component.html"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { AuthGuard } from '../core/guards/auth.guard';\nimport { ProjectsComponent } from './components/projects/projects.component';\nimport { SkillsComponent } from './components/skills/skills.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { AddProjectComponent } from './components/add-project/add-project.component';\nimport { EditProjectComponent } from './components/edit-project/edit-project.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: SidebarComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: '',\n        component: DashboardComponent,\n      },\n      {\n        path: 'projects',\n        component: ProjectsComponent,\n      },\n      {\n        path: 'projects/:id',\n        component: EditProjectComponent,\n      },\n      {\n        path: 'add-project',\n        component: AddProjectComponent,\n      },\n      {\n        path: 'skills',\n        component: SkillsComponent,\n      },\n      {\n        path: 'contact',\n        component: ContactComponent,\n      },\n    ],\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then((m) => m.AuthModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.scss']\n})\nexport class SkillsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>skills works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '@core/services/auth/auth.service';\nimport { User } from '@core/models/user';\nimport * as fromApp from '../../store/app.reduce';\nimport * as AuthActions from '../auth/store/auth.actions';\nimport { Store } from '@ngrx/store';\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit, OnDestroy {\n  username = '';\n  user$!: Observable<User>;\n  subStore: Subscription;\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private auth: AuthService,\n    private store: Store<fromApp.AppState>\n  ) {}\n  ngOnInit(): void {\n    this.subStore = this.store.select('auth').subscribe((authStateResponse) => {\n      this.username = authStateResponse.user\n        ? authStateResponse.user.email\n        : '';\n    });\n  }\n  onLogOut(): void {\n    this.store.dispatch(AuthActions.logout());\n  }\n  ngOnDestroy(): void {\n    if (this.subStore) {\n      this.subStore.unsubscribe();\n    }\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\"\n  >\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/', 'dashboard']\">Dashboard</a>\n      <a mat-list-item [routerLink]=\"['/', 'dashboard', 'projects']\"\n        >Projects</a\n      >\n      <a mat-list-item [routerLink]=\"['/', 'dashboard', 'skills']\">Skills</a>\n      <a mat-list-item [routerLink]=\"['/', 'dashboard', 'contact']\">Contacts</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">home</mat-icon>\n      </button>\n      <div class=\"d-flex justify-content-between w-100\">\n        <span>Welcome {{ username }} </span>\n        <button mat-raised-button color=\"warn\" (click)=\"onLogOut()\">\n          logout\n        </button>\n      </div>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth/auth.service';\nimport * as fromApp from '../../store/app.reduce';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  isAuthenticated = false;\n  private userSub!: Subscription;\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private store: Store<fromApp.AppState>\n  ) {}\n  canActivate(): any {\n    return this.store.select('auth').pipe(\n      take(1),\n      map((authState) => authState.user),\n      map((user) => {\n        const isAuth = !!user;\n        if (isAuth) {\n          return true;\n        }\n        return this.router.createUrlTree(['/', 'dashboard', 'auth']);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { Project } from '../../models/project';\nimport { Observable, Subscription } from 'rxjs';\nimport { exhaustMap, map, switchMap, take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { CurrentUser } from '@core/models/user';\n@Injectable({ providedIn: 'root' })\nexport class ServiceProjects {\n  projectsArray: Project[] = [];\n  constructor(\n    private http: HttpClient,\n    private auth: AuthService\n     ) {}\n  getAllProjects(): Observable<Project[]> {\n    return this.http.get<Project[]>(`${environment.API_URL_FIREBASE}.json`)\n    .pipe(\n      map(\n        (responseData: any) => {\n          for (const key in responseData) {\n            if (responseData.hasOwnProperty(key)) {\n              this.projectsArray.push(\n                {\n                  ...responseData[key],\n                  id: key\n                }\n              );\n            }\n          }\n          return this.projectsArray;\n        })\n      );\n  }\n  getProject(id: string): Observable<Project> {\n    return this.http.get<Project>(`${environment.API_URL_FIREBASE}/${id}.json`);\n  }\n  createProjects(project: Project): any {\n    return this.http.post<Project>(`${environment.API_URL_FIREBASE}.json`, project);\n  }\n  updateProjects(id: string, changes: Partial<Project>): Observable<object> {\n    return this.http.put<Project>(`${environment.API_URL_FIREBASE}/${id}.json`, changes);\n  }\n  deleteProjects(id: string): Subscription {\n    return this.http.delete<Project>(`${environment.API_URL_FIREBASE}/${id}.json`).subscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Project } from '@core/models/project';\nimport { ServiceProjects } from '@core/services/projects/project.service';\n\n@Component({\n  selector: 'app-add-project',\n  templateUrl: './add-project.component.html',\n  styleUrls: ['./add-project.component.scss'],\n})\nexport class AddProjectComponent implements OnInit {\n  constructor(\n    private serviceProjects: ServiceProjects,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.formBuilder();\n  }\n  addProjectForm!: FormGroup;\n  ngOnInit(): void {}\n  private formBuilder(): void {\n    this.addProjectForm = this.fb.group({\n      projectName: ['', [Validators.required]],\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      technologies: ['', [Validators.required]],\n      imageUrl: ['', [Validators.required]],\n      projectUrl: ['', [Validators.required]],\n    });\n  }\n  onSubmit(): void {\n    this.serviceProjects\n      .createProjects(this.addProjectForm.value as Project)\n      .subscribe((data: any) => {\n        console.log(data);\n        this.router.navigate(['/', 'dashboard', 'projects']);\n      });\n  }\n}\n","<div class=\"py-4\">\n  <h1 class=\"text-center\">Please Insert a new Project</h1>\n  <form\n    [formGroup]=\"addProjectForm\"\n    class=\"d-flex flex-column justify-content-center align-items-center\"\n    (ngSubmit)=\"onSubmit()\"\n  >\n    <mat-form-field class=\"mb-2\" appearance=\"fill\">\n      <mat-label>Project Name</mat-label>\n      <input formControlName=\"projectName\" matInput />\n      <mat-error\n        *ngIf=\"addProjectForm.get('projectName')?.hasError('required')\"\n      >\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mb-2\" appearance=\"fill\">\n      <mat-label>Title</mat-label>\n      <input formControlName=\"title\" matInput />\n      <mat-error *ngIf=\"addProjectForm.get('title')?.hasError('required')\">\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mb-2\" appearance=\"fill\">\n      <mat-label>Description</mat-label>\n      <input formControlName=\"description\" matInput />\n      <mat-error\n        *ngIf=\"addProjectForm.get('description')?.hasError('required')\"\n      >\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mb-2\" appearance=\"fill\">\n      <mat-label>Image Url</mat-label>\n      <input formControlName=\"imageUrl\" matInput />\n      <mat-error *ngIf=\"addProjectForm.get('imageUrl')?.hasError('required')\">\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mb-2\" appearance=\"fill\">\n      <mat-label>Project Url</mat-label>\n      <input formControlName=\"projectUrl\" matInput />\n      <mat-error *ngIf=\"addProjectForm.get('projectUrl')?.hasError('required')\">\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mb-2\" appearance=\"fill\">\n      <mat-label>Technologies</mat-label>\n      <textarea formControlName=\"technologies\" matInput></textarea>\n      <mat-error\n        *ngIf=\"addProjectForm.get('technologies')?.hasError('required')\"\n      >\n        this field is required\n      </mat-error>\n    </mat-form-field>\n    <mat-error\n      class=\"mt-2\"\n      *ngIf=\"!addProjectForm.valid && addProjectForm.touched\"\n    >\n      this form is invalid\n    </mat-error>\n    <button\n      [disabled]=\"!addProjectForm.valid\"\n      mat-raised-button\n      type=\"submit\"\n      color=\"primary\"\n    >\n      Add New Project\n    </button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ProjectsComponent } from './components/projects/projects.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SkillsComponent } from './components/skills/skills.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { AddProjectComponent } from './components/add-project/add-project.component';\nimport { EditProjectComponent } from './components/edit-project/edit-project.component';\n\n@NgModule({\n  declarations: [\n    SidebarComponent,\n    ProjectsComponent,\n    SkillsComponent,\n    ContactComponent,\n    DashboardComponent,\n    AddProjectComponent,\n    EditProjectComponent,\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class AdminModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Project } from '@core/models/project';\nimport { ServiceProjects } from '@core/services/projects/project.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-edit-project',\n  templateUrl: './edit-project.component.html',\n  styleUrls: ['./edit-project.component.scss'],\n})\nexport class EditProjectComponent implements OnInit {\n  editProjectForm!: FormGroup;\n  project$!: Observable<Project>;\n  id!: string;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private serviceProject: ServiceProjects,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.onGetProject();\n    this.formBuild();\n  }\n  onGetProject(): void {\n    this.route.params.subscribe((data) => {\n      this.id = data.id;\n      this.serviceProject.getProject(this.id).subscribe((project: any) => {\n        this.editProjectForm.patchValue({\n          projectName: project.projectName,\n          title: project.title,\n          description: project.description,\n          technologies: project.technologies,\n          imageUrl: project.imageUrl,\n          projectUrl: project.projectUrl,\n        });\n      });\n    });\n  }\n\n  get projectName(): AbstractControl | null {\n    return this.editProjectForm.get('projectName');\n  }\n\n  private formBuild(): void {\n    this.editProjectForm = this.fb.group({\n      projectName: ['', [Validators.required]],\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      technologies: ['', [Validators.required]],\n      imageUrl: ['', [Validators.required]],\n      projectUrl: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit(): void {\n    this.serviceProject\n      .updateProjects(this.id, this.editProjectForm.value)\n      .subscribe(() => {\n        this.router.navigate(['/', 'dashboard', 'projects']);\n      });\n  }\n}\n","<div class=\"py-4\">\n  <h1 class=\"text-center\">Please Edit an exist Project</h1>\n  <form\n    [formGroup]=\"editProjectForm\"\n    class=\"d-flex flex-column justify-content-center align-items-center\"\n    (ngSubmit)=\"onSubmit()\"\n  >\n    <mat-form-field class=\"mb-2\" appearance=\"fill\">\n      <mat-label>Project Name</mat-label>\n      <input formControlName=\"projectName\" matInput />\n      <mat-error\n        *ngIf=\"editProjectForm.get('projectName')?.hasError('required')\"\n      >\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mt-2\" appearance=\"fill\">\n      <mat-label>Title</mat-label>\n      <input formControlName=\"title\" matInput />\n      <mat-error *ngIf=\"editProjectForm.get('title')?.hasError('required')\">\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mt-2\" appearance=\"fill\">\n      <mat-label>Description</mat-label>\n      <input formControlName=\"description\" matInput />\n      <mat-error\n        *ngIf=\"editProjectForm.get('description')?.hasError('required')\"\n      >\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mt-2\" appearance=\"fill\">\n      <mat-label>Image Url</mat-label>\n      <input formControlName=\"imageUrl\" matInput />\n      <mat-error *ngIf=\"editProjectForm.get('imageUrl')?.hasError('required')\">\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mt-2\" appearance=\"fill\">\n      <mat-label>Project Url</mat-label>\n      <input formControlName=\"projectUrl\" matInput />\n      <mat-error\n        *ngIf=\"editProjectForm.get('projectUrl')?.hasError('required')\"\n      >\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"mt-2\" appearance=\"fill\">\n      <mat-label>Technologies</mat-label>\n      <textarea formControlName=\"technologies\" matInput></textarea>\n      <mat-error\n        *ngIf=\"editProjectForm.get('technologies')?.hasError('required')\"\n      >\n        this field is required\n      </mat-error>\n    </mat-form-field>\n\n    <button\n      class=\"mt-2\"\n      [disabled]=\"!editProjectForm.valid\"\n      mat-raised-button\n      type=\"submit\"\n      color=\"primary\"\n    >\n      Edit Project\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Project } from '@core/models/project';\nimport { ServiceProjects } from '@core/services/projects/project.service';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss'],\n})\nexport class ProjectsComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  displayedColumns: string[] = [\n    'id',\n    'title',\n    'projectUrl',\n    'imageUrl',\n    'Actions',\n  ];\n  dataSource!: MatTableDataSource<Project>;\n  dataSourceSub!: Subscription;\n  constructor(\n    private projectService: ServiceProjects,\n    private router: Router\n  ) {}\n  ngOnInit(): void {\n    this.onGetData();\n  }\n  onGetData(): void {\n    this.isLoading = true;\n    this.dataSourceSub = this.projectService\n      .getAllProjects()\n      .subscribe((data: any) => {\n        this.isLoading = false;\n        this.dataSource = new MatTableDataSource(data);\n      });\n  }\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  onDeleteProject(id: string): void {\n    this.projectService.deleteProjects(id);\n    this.onGetData();\n  }\n  ngOnDestroy(): void {\n    this.dataSourceSub.unsubscribe();\n  }\n}\n","<div class=\"container\">\n  <button\n    style=\"margin: 10px\"\n    [routerLink]=\"['/', 'dashboard', 'add-project']\"\n    mat-raised-button\n    color=\"primary\"\n  >\n    Add Project +\n  </button>\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. Mia\"\n      #input\n    />\n  </mat-form-field>\n  <mat-spinner class=\"m-auto mb-5\" *ngIf=\"isLoading\" ></mat-spinner>\n  <div *ngIf=\"!isLoading\"  class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n        <td mat-cell *matCellDef=\"let project\">{{ project.id }}</td>\n      </ng-container>\n\n      <!-- Title Column -->\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>title</th>\n        <td mat-cell *matCellDef=\"let project\">{{ project.title }}</td>\n      </ng-container>\n\n      <!-- ProjectUrl Column -->\n      <ng-container matColumnDef=\"projectUrl\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Project Url</th>\n        <td mat-cell *matCellDef=\"let project\">\n          <a [href]=\"project.projectUrl\">\n            {{ project.projectUrl }}\n          </a>\n        </td>\n      </ng-container>\n\n      <!-- imageUrl Column -->\n      <ng-container matColumnDef=\"imageUrl\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Img Url</th>\n        <td mat-cell *matCellDef=\"let project\">{{ project.imageUrl }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Actions\">\n        <th\n          mat-header-cell\n          *matHeaderCellDef\n          mat-sort-header\n          class=\"text-center\"\n        >\n          buttons\n        </th>\n        <td mat-cell *matCellDef=\"let project\">\n          <div class=\"d-flex justify-content-center\">\n            <button\n              style=\"margin-right: 5px\"\n              mat-raised-button\n              color=\"primary\"\n              [routerLink]=\"['/', 'dashboard', 'projects', project.id]\"\n            >\n              Edit\n            </button>\n            <a\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"onDeleteProject(project.id)\"\n            >\n              Delete\n            </a>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">\n          No data matching the filter \"{{ input.value }}\"\n        </td>\n      </tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}