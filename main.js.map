{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/models/dialog.enum.ts","./src/app/core/models/tech-category.enum.ts","./src/app/core/models/user.ts","./src/app/core/services/auth/auth-interceptor.service.ts","./src/app/core/services/auth/auth.service.ts","./src/app/core/services/dialog.service.ts","./src/app/core/services/skills/skills.service.ts","./src/app/shared/components/button/button.component.ts","./src/app/shared/components/button/button.component.html","./src/app/shared/components/dialog/dialog.component.ts","./src/app/shared/components/dialog/dialog.component.html","./src/app/shared/components/page-not-found/page-not-found.component.ts","./src/app/shared/components/page-not-found/page-not-found.component.html","./src/app/shared/material/material.module.ts","./src/app/store/app.reduce.ts","./src/app/store/operations/auth/auth.actions.ts","./src/app/store/operations/auth/auth.effects.ts","./src/app/store/operations/auth/auth.reducer.ts","./src/app/store/operations/projects/projects.actions.ts","./src/app/store/operations/projects/projects.effects.ts","./src/app/store/operations/projects/projects.reducer.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '', \n    loadChildren: () => import('./modules/landing-page/landing-page.module').then(m => m.LandingPageModule)\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () =>\n      import('./modules/admin/admin.module').then((m) => m.AdminModule),\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as AuthActions from './store/operations/auth/auth.actions';\nimport { AppState } from '@core/models/appState';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private store: Store<AppState>\n  ) { }\n  ngOnInit(): void {\n    this.store.dispatch(AuthActions.autoLogin());\n  }\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderInterceptor } from '@core/services/auth/auth-interceptor.service';\nimport { ProjectsEffects } from './store/operations/projects/projects.effects';\nimport * as fromApp from './store/app.reduce';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from 'src/environments/environment';\nimport { AuthEffects } from './store/operations/auth/auth.effects';\nimport { ButtonComponent } from '@shared/components/button/button.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(fromApp.appReducer),\n    EffectsModule.forRoot([AuthEffects, ProjectsEffects]),\n    StoreDevtoolsModule.instrument({\n      logOnly: environment.production,\n    }),\n    ButtonComponent\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HeaderInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SkillsService } from './services/skills/skills.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  providers: [SkillsService],\n})\nexport class CoreModule {}\n","export enum DialogType {\n  Success = 1,\n  Error = 2,\n  Info = 3,\n  Warning = 4\n}","export enum TechCategory {\n  Frontend = 1,\n  Backend = 2,\n  Cloud = 3,\n  Database = 4,\n  TestingFramework = 5\n}","export class CurrentUser {\n  constructor(\n    public email: string,\n    public id: string,\n    // tslint:disable-next-line: variable-name\n    private _token: string,\n    // tslint:disable-next-line: variable-name\n    private _tokenExpirationDate: Date,\n  ) { }\n  get token(): string | null {\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\n      return null;\n    }\n    return this._token;\n  }\n}\nexport interface User {\n  email: string;\n  displayName: string;\n  password?: string;\n  uid?: string;\n}\n\nexport interface AuthResponseData {\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered: boolean;\n  kind?: string;\n  displayName?: string;\n}\n\nexport interface SignInResponseData {\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered: boolean;\n  kind: string;\n  displayName: string;\n}\n\nexport interface AutoLoginUser {\n  email: string;\n  id: string;\n  _token: string;\n  _tokenExpirationDate: string;\n};\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { exhaustMap, map, take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@core/models/appState';\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n  constructor(private store: Store<AppState>) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return this.store.select('auth')\n      .pipe(\n        take(1),\n        map((authState) => authState.user),\n        exhaustMap((user: any) => {\n          if (!user) {\n            return next.handle(req);\n          }\n          const authReq = req.clone({ params: new HttpParams().set('auth', user.token) });\n          return next.handle(authReq);\n        }\n        )\n      );\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport * as AuthActions from '../../../store/operations/auth/auth.actions';\nimport { Store } from '@ngrx/store';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthResponseData } from '@core/models/user';\nimport { Observable } from 'rxjs';\nimport { AppState } from '@core/models/appState';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private http = inject(HttpClient);\n  private tokenExpirationTimer: any;\n  constructor(private store: Store<AppState>) { }\n\n  setAutoLogout(expirationDuration: number): void {\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.store.dispatch(AuthActions.logout());\n    }, expirationDuration);\n  }\n  clearLogoutTimer(): void {\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n      this.tokenExpirationTimer = null;\n    }\n  }\n\n  signUp(email: string, password: string): Observable<AuthResponseData> {\n    return this.http\n      .post<AuthResponseData>(\n        `${environment.API_AUTH_FIREBASE_SIGNUP}${environment.API_KEY_FIREBASE}`,\n        {\n          email,\n          password,\n          returnSecureToken: true,\n        }\n      )\n  }\n\n  singIn(email: string, password: string): Observable<AuthResponseData> {\n    return this.http\n      .post<AuthResponseData>(\n        `${environment.API_AUTH_FIREBASE_SIGNIN}${environment.API_KEY_FIREBASE}`,\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n  };\n}\n","import { ComponentType } from '@angular/cdk/portal';\nimport { Injectable, inject } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { DialogType } from '@core/models/dialog.enum';\nimport { Error } from '@core/models/error';\nimport { PaginatedResponse } from '@core/models/response-data';\nimport { DialogComponent } from '@shared/components/dialog/dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n  private dialog = inject(MatDialog)\n  private dialogRef: MatDialogRef<any>;\n  constructor() { }\n\n  openDialog<T>(dialogType: DialogType = DialogType.Info, data?: any | Error, component?: ComponentType<T>) {\n    if (component) {\n      this.dialogRef = this.dialog.open(component, {\n        data: {\n          type: dialogType,\n          data\n        }\n      });\n    } else {\n      this.dialogRef = this.dialog.open(DialogComponent, {\n        data: {\n          type: dialogType,\n          data\n        }\n      });\n    }\n    return this.dialogRef;\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close()\n  }\n\n  getDialogRef() {\n    return this.dialogRef;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Skill } from '../../models/skills';\nimport { TechCategory } from '@core/models/tech-category.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkillsService {\n  private startYear = new Date('01/01/2017');\n  overAllYearsOfExperience = this.getOverAllYearsOfExperience();\n  private skills: Skill[] = [\n    {\n      name: 'Angular',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/angularjs/angularjs-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'My expertise lies in leveraging Angular\\'s powerful features such as component-based architecture, dependency injection, and reactive programming using RxJS. I have successfully built and maintained large-scale applications, utilizing Angular\\'s comprehensive tooling and development ecosystem.',\n      category: TechCategory.Frontend\n    },\n    {\n      name: 'React',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'I possess extensive expertise in React, a popular JavaScript library for building user interfaces. With several years of experience, I have developed a deep understanding of React\\'s core concepts, component-based architecture, and its robust ecosystem.',\n      category: TechCategory.Frontend\n    },\n    {\n      name: 'Node.js',\n      knowledge: 100,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'in Node.js, I have established a strong foundation in server-side JavaScript development. I possess in-depth knowledge and expertise in leveraging Node.js to build scalable and high-performance web applications.',\n      category: TechCategory.Backend\n    },\n    {\n      name: 'Css',\n      knowledge: 100,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/css3/css3-plain.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'With a strong command over CSS (Cascading Style Sheets), I possess the skills to create visually appealing and engaging user interfaces. I have developed expertise in leveraging CSS to style and layout web pages with precision and creativity.',\n      category: TechCategory.Frontend\n    },\n    {\n      name: 'MondoDB',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/mongodb/mongodb-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'With expertise in MongoDB, I possess a strong understanding of this NoSQL database technology and its application in modern web development. I have successfully utilized MongoDB to build scalable and flexible data storage solutions.',\n      category: TechCategory.Database\n      \n    },\n    {\n      name: 'Typescript',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'I am skilled in leveraging TypeScript\\'s powerful tooling and language features to facilitate efficient development workflows. I am proficient in utilizing TypeScript\\'s transpilation process to convert TypeScript code into JavaScript that runs on different platforms and browsers.',\n      category: TechCategory.Frontend\n      \n    },\n    {\n      name: 'Tailwind',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/tailwindcss/tailwindcss-plain.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'My proficiency in Tailwind CSS lies in its unique approach of using utility classes to style and design web interfaces. I am skilled in leveraging Tailwind CSS\\'s extensive collection of utility classes to rapidly prototype and build user interfaces with minimal custom CSS.',\n      category: TechCategory.Frontend\n      \n    },\n    {\n      name: 'Nest.js',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nestjs/nestjs-plain.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'Nest.js combines the best practices of object-oriented programming, functional programming, and the modular architecture of frameworks like Angular. I am skilled in leveraging Nest.js\\'s features, such as decorators, dependency injection, and decorators, to create highly organized and testable code.',\n      category: TechCategory.Backend\n      \n    },\n    {\n      name: 'AWS',\n      knowledge: 100,\n      // proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/amazonwebservices/amazonwebservices-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'I am proficient in utilizing AWS core services, including Amazon EC2 for virtual server provisioning, Amazon S3 for scalable object storage, and Amazon RDS for managed relational databases. I have experience in leveraging these services to build highly available and fault-tolerant architectures.',\n      category: TechCategory.Cloud\n      \n    },\n    {\n      name: 'Express',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://w7.pngwing.com/pngs/925/447/png-transparent-express-js-node-js-javascript-mongodb-node-js-text-trademark-logo.png',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'I am skilled in building RESTful APIs using Express.js, adhering to best practices for resource naming, HTTP methods, and status codes. I can effectively handle data validation, input sanitization, and response formatting to ensure the integrity and security of the API.',\n      category: TechCategory.Backend\n      \n    },\n    {\n      name: 'Javascript',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-plain.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'With expertise in JavaScript, I bring a strong understanding of this versatile programming language to my web development projects. With 8 years of experience, I have successfully utilized JavaScript to build dynamic and interactive web applications.',\n      category: TechCategory.Frontend\n      \n    },\n    {\n      name: 'MySql',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/mysql/mysql-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'With expertise in MySQL, I possess a strong understanding of this popular open-source relational database management system. With [X] years of experience, I have successfully utilized MySQL to design, develop, and maintain efficient and reliable databases for various web applications.',\n      category: TechCategory.Database\n      \n    },\n    {\n      name: 'PostgreSQL',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/postgresql/postgresql-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'I am proficient in creating and optimizing database schemas, tables, and indexes using PostgreSQL\\'s SQL (Structured Query Language). I have a deep understanding of SQL syntax, enabling me to write complex queries, joins, and subqueries to retrieve and manipulate data effectively.',\n      category: TechCategory.Database\n      \n    },\n    {\n      name: 'C#',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/csharp/csharp-line.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'C# is a powerful and modern object-oriented language that is widely used in the development of desktop, web, and mobile applications. I am proficient in leveraging C#\\'s features such as strong typing, automatic memory management, and extensive standard libraries to write clean, maintainable, and efficient code.',\n      category: TechCategory.Backend\n      \n    },\n    {\n      name: 'Git',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/git/git-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'With expertise in Git, I possess a strong understanding of this distributed version control system, which is widely used in software development projects.',\n      category: TechCategory.Frontend\n      \n    },\n    {\n      name: '.Net Core',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/dotnetcore/dotnetcore-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'With expertise in .NET Core, I possess a strong understanding of this powerful and cross-platform framework for building modern web, desktop, and cloud applications.  I have successfully utilized .NET Core to develop scalable, high-performance, and maintainable software solutions.',\n      category: TechCategory.Backend\n      \n    },\n    {\n      name: 'Jasmine',\n      knowledge: 100,\n      // proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/jasmine/jasmine-plain.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'With expertise in Jasmine, I possess a strong understanding of this popular JavaScript testing framework used for behavior-driven development (BDD) and unit testing.',\n      category: TechCategory.TestingFramework\n      \n    },\n    {\n      name: 'Jest',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/jest/jest-plain.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'With expertise in Jest, I possess a strong understanding of this popular JavaScript testing framework used for unit testing, integration testing, and snapshot testing.',\n      category: TechCategory.TestingFramework\n      \n    },\n    {\n      name: 'Karma',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/karma/karma-original.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'By adopting the Karma Developer Unit Testing methodology, developers can gain confidence in the correctness of their karma-related code units. It helps uncover bugs, edge cases, and inconsistencies, allowing developers to fix issues early in the development cycle.',\n      category: TechCategory.TestingFramework\n      \n    },\n    {\n      name: 'HTML',\n      knowledge: 100,\n      proficient: true,\n      logo: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/html5/html5-plain.svg',\n      yearsOfExperience: this.overAllYearsOfExperience,\n      description: 'I am well-versed in utilizing HTML best practices for accessibility, including providing alternative text for images, using semantic tags, and structuring content to be screen reader-friendly. ',\n      category: TechCategory.Frontend\n    },\n  ];\n\n  getAllSkills(): Skill[] {\n    return this.skills;\n  }\n\n  getOverAllYearsOfExperience() {\n  let diff =(new Date().getTime() - this.startYear.getTime()) / 1000;\n   diff /= (60 * 60 * 24);\n  return Math.abs(Math.round(diff/365.25));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '@shared/material/material.module';\n\n@Component({\n  selector: 'portfolio-button',\n  standalone: true,\n  imports: [CommonModule, MaterialModule],\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n  @Output() clickEvent = new EventEmitter();\n  @Input() color?: 'primary' | 'accent' | 'warn';\n  @Input() type: 'submit' | 'button' | 'reset';\n  @Input() class?: string;\n\n  triggerEvent(): void{\n    this.clickEvent.emit(new Event('click'))\n  }\n}\n","<button\n  [class]=\"class\"\n  [type]=\"type\"\n  mat-raised-button\n  class=\"animate__animated animate__fadeInUp animate__slow\"\n  (click)=\"triggerEvent()\"\n  [color]=\"color\">\n  <ng-content></ng-content>\n</button>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogType } from '@core/models/dialog.enum';\nimport { DialogData } from '@core/models/dialog.type';\n\n@Component({\n  selector: 'portfolio-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent {\n  dialogType = DialogType;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n","<ng-container *ngIf=\"data.type === dialogType.Error\">\n  <div class=\"md:w-[500px] rounded-md bg-red-50 p-2 md:p-4\">\n    <div class=\"flex items-center\">\n\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n          <path fill-rule=\"evenodd\"\n            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z\"\n            clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n\n      <div class=\"ml-3\">\n        <h4 class=\"text-red-400 text-sm font-medium\">Error</h4>\n      </div>\n    </div>\n\n    <div mat-dialog-content>\n      <div class=\"text-sm text-red-700\">\n        <ul role=\"list\" class=\"space-y-1 pl-5\">\n          <li>{{data.data.error}} {{data.data.code}}</li>\n        </ul>\n      </div>\n    </div>\n\n    <div mat-dialog-actions>\n      <div class=\"flex w-full justify-end\">\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Ok</button>\n      </div>\n    </div>\n\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"data.type === dialogType.Success\">\n  <div class=\"md:w-[500px] rounded-md bg-green-50 p-2 md:p-4\">\n    <div class=\"flex items-center\">\n\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n          <path fill-rule=\"evenodd\"\n            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\n            clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n\n      <div class=\"ml-3\">\n        <h4 class=\"text-green-800 text-sm font-medium\">Success!</h4>\n      </div>\n    </div>\n\n    <div mat-dialog-content>\n      <div class=\"text-sm text-green-700\">\n        <ul role=\"list\" class=\"space-y-1 pl-5\">\n          <li>{{data.data.message}}</li>\n        </ul>\n      </div>\n    </div>\n\n    <div mat-dialog-actions>\n      <div class=\"-mx-2 -my-1.5 flex justify-end w-full\">\n        <button mat-dialog-close type=\"button\"\n          class=\"ml-3 rounded-md bg-green-50 px-4 py-1.5 text-sm font-medium text-green-800 hover:bg-green-100 focus-visible:outline-none focus-within:outline-none focus:outline-none focus:bg-green-200 focus:ring-green-600 focus:ring-offset-green-50\">Dismiss</button>\n      </div>\n    </div>\n\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"data.type === dialogType.Info\">\n  <div class=\"md:w-[500px] rounded-md bg-blue-50 p-2 md:p-4\">\n    <div class=\"flex items-center\">\n\n      <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n        <path fill-rule=\"evenodd\"\n          d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z\"\n          clip-rule=\"evenodd\" />\n      </svg>\n\n      <div class=\"ml-3\">\n        <h3 class=\"text-blue-400 text-sm font-medium\">Info</h3>\n      </div>\n    </div>\n\n    <div mat-dialog-content>\n      <div class=\"text-sm text-blue-700\">\n        <ul role=\"list\" class=\"space-y-1 pl-5\">\n          <li>{{data.data.message}}</li>\n        </ul>\n      </div>\n    </div>\n\n    <div mat-dialog-actions>\n      <div class=\"-mx-2 -my-1.5 flex justify-end w-full\">\n        <button mat-dialog-close type=\"button\"\n          class=\"ml-3 rounded-md bg-blue-50 px-4 py-1.5 text-sm font-medium text-blue-800 hover:bg-blue-100 focus-visible:outline-none focus-within:outline-none focus:outline-none focus:bg-blue-200 focus:ring-blue-600 focus:ring-offset-blue-50\">Dismiss</button>\n      </div>\n    </div>\n\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"data.type === dialogType.Warning\">\n  <div class=\"md:w-[500px] rounded-md bg-yellow-50 p-2 md:p-4\">\n    <div class=\"flex items-center\">\n\n      <svg class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n        <path fill-rule=\"evenodd\"\n          d=\"M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z\"\n          clip-rule=\"evenodd\" />\n      </svg>\n\n      <div class=\"ml-3\">\n        <h4 class=\"text-yellow-400 text-sm font-medium\">Attention needed\n        </h4>\n      </div>\n    </div>\n\n    <div mat-dialog-content>\n      <div class=\"text-sm text-yellow-700\">\n        <ul role=\"list\" class=\"space-y-1 pl-5\">\n          <li>{{data.data.message}}</li>\n        </ul>\n      </div>\n    </div>\n\n    <div mat-dialog-actions>\n      <div class=\"-mx-2 -my-1.5 flex justify-end w-full\">\n        <button mat-dialog-close type=\"button\"\n          class=\"ml-3 rounded-md bg-yellow-50 px-4 py-1.5 text-sm font-medium text-yellow-800 hover:bg-yellow-100 focus-visible:outline-none focus-within:outline-none focus:outline-none focus:bg-yellow-200 focus:ring-yellow-600 focus:ring-offset-yellow-50\">Dismiss</button>\n      </div>\n    </div>\n\n  </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'portfolio-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss'],\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"notFound__hero\">\n  <img\n    src=\"https://media-porfolio.s3.us-east-2.amazonaws.com/images/404_error.png\"\n    alt=\"astronaut\"\n  />\n  <div class=\"container-astro\">\n    <div class=\"img-astro\">\n      <a [routerLink]=\"['/']\">\n        <img\n          src=\"https://media-porfolio.s3.us-east-2.amazonaws.com/images/astronauta.png\"\n          alt=\"astro\"\n        />\n      </a>\n    </div>\n  </div>\n  <p>Page not Found please click on the astronaut to return to homePage</p>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nconst modules = [\n  MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatGridListModule,\n  MatCardModule,\n  MatMenuModule,\n  MatButtonModule,\n  LayoutModule,\n  MatToolbarModule,\n  MatListModule,\n  MatIconModule,\n  MatTableModule,\n  MatFormFieldModule,\n  MatPaginatorModule,\n  MatInputModule,\n  CommonModule,\n  MatSelectModule,\n  MatDialogModule\n]\n@NgModule({\n  declarations: [],\n  imports: [\n    ...modules\n  ],\n  exports: [\n    ...modules\n  ],\n})\nexport class MaterialModule {}\n","import * as projectsReducer from './operations/projects/projects.reducer';\nimport * as authReducer from './operations/auth/auth.reducer';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { AppState } from '@core/models/appState';\n\nexport const appReducer: ActionReducerMap<AppState> = {\n  projects: projectsReducer.projectReducer,\n  auth: authReducer.authReducer,\n};\n","import { createAction, props } from '@ngrx/store';\n\nexport const authenticateSuccess = createAction(\n  '[Auth] Authenticate Success',\n  props<{\n    email: string;\n    userId: string;\n    token: string;\n    expirationDate: Date;\n  }>()\n);\n\nexport const loginStart = createAction(\n  '[Auth] Login Start',\n  props<{ email: string; password: string }>()\n);\n\nexport const signUpStart = createAction(\n  '[Auth] Signup Start',\n  props<{ email: string; password: string }>()\n);\nexport const logout = createAction('[Auth] Logout');\n\nexport const authenticateFail = createAction(\n  '[Auth] Authenticate fail',\n  props<{ errorMessage: string }>()\n);\n\nexport const clearError = createAction('[Auth] Clear Error');\n\nexport const autoLogin = createAction('[Auth] Auto Login');\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthResponseData, AutoLoginUser, CurrentUser } from '@core/models/user';\nimport { AuthService } from '@core/services/auth/auth.service';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\nimport * as AuthActions from './auth.actions';\nimport { DialogService } from '@core/services/dialog.service';\nimport { DialogType } from '@core/models/dialog.enum';\n\n@Injectable()\nexport class AuthEffects {\n  private dialogService = inject(DialogService);\n  private dialogEnumType = DialogType;\n  constructor(\n    private actions$: Actions,\n    private router: Router,\n    private authService: AuthService,\n  ) { }\n\n  authSignUp$ = createEffect((): any =>\n    this.actions$.pipe(\n      ofType(AuthActions.signUpStart),\n      switchMap((action) => this.authService.signUp(action.email, action.password)\n        .pipe(\n          tap((respData) => this.authService.setAutoLogout(+respData.expiresIn * 1000)),\n          map((resData) => this.handleAuthentication(resData)),\n          catchError(this.handleError.bind(this))\n        ))\n    )\n  );\n\n  authLogout$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.logout),\n        tap(() => localStorage.removeItem('userData')),\n        tap(() => this.dialogService.openDialog(this.dialogEnumType.Success, { message: 'You were succesfully logout.' }))\n      ),\n    { dispatch: false }\n  );\n\n  authLogin$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.autoLogin),\n      map(() => {\n        const userData: AutoLoginUser = JSON.parse(localStorage.getItem('userData'));\n        if (!userData) {\n          return { type: 'no user available' };\n        }\n        const loadedUser = new CurrentUser(\n          userData.email,\n          userData.id,\n          userData._token,\n          new Date(userData._tokenExpirationDate)\n        );\n        if (loadedUser.token) {\n          const expirationDuration =\n            new Date(userData._tokenExpirationDate).getTime() -\n            new Date().getTime();\n          this.authService.setAutoLogout(expirationDuration);\n          return AuthActions.authenticateSuccess({\n            email: loadedUser.email,\n            userId: loadedUser.id,\n            token: loadedUser.token,\n            expirationDate: new Date(userData._tokenExpirationDate),\n          });\n        }\n        return { type: 'no token available' };\n      })\n    )\n  );\n\n  authSignIn$ = createEffect(\n    (): Observable<any> =>\n      this.actions$.pipe(\n        ofType(AuthActions.loginStart),\n        switchMap((action) => this.authService.singIn(action.email, action.password)\n          .pipe(\n            tap((respData) => {\n              this.dialogService.openDialog(this.dialogEnumType.Success, { message: `login successfull welcome ${respData.email}` })\n              this.authService.setAutoLogout(+respData.expiresIn * 1000);\n            }),\n            map((resData) => this.handleAuthentication(resData)),\n            catchError(this.handleError.bind(this))\n          ))\n      )\n  );\n\n  authRedirect$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.authenticateSuccess),\n        tap(() => this.router.navigate(['/', 'dashboard']))\n      ),\n    { dispatch: false }\n  );\n\n  authRedirectLogout$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.logout),\n        tap(() => {\n          this.router.navigate(['/', 'dashboard', 'auth']);\n          this.authService.clearLogoutTimer();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  private handleError(errorResponse: HttpErrorResponse): any {\n    let errorMessage = 'An unknown error occurred!';\n    if (!errorResponse.error || !errorResponse.error.error) {\n      this.dialogService.openDialog(this.dialogEnumType.Error, { error: errorMessage, code: 400 })\n      return of(AuthActions.authenticateFail({ errorMessage }));\n    }\n    switch (errorResponse.error.error.message) {\n      case 'INVALID_PASSWORD':\n        errorMessage = 'Passwords is incorrect';\n        break;\n      case 'EMAIL_NOT_FOUND':\n        errorMessage = 'This Email is not register';\n        break;\n      case 'USER_DISABLED':\n        errorMessage = 'This user as been disabled';\n        break;\n      case 'EMAIL_EXISTS':\n        errorMessage = 'This user is already registered';\n        break;\n      case 'OPERATION_NOT_ALLOWED':\n        errorMessage = 'Password sign-in is disabled for this project';\n        break;\n      case 'TOO_MANY_ATTEMPTS_TRY_LATER':\n        errorMessage = 'Too many attempts try later';\n        break;\n      default:\n        errorMessage = errorResponse.error.error.message;\n        break;\n    }\n    this.dialogService.openDialog(this.dialogEnumType.Error, { error: errorMessage, code: 400 })\n    return of(AuthActions.authenticateFail({ errorMessage }));\n  }\n  private handleAuthentication(responseData: AuthResponseData): any {\n    const expirationDate = new Date(\n      new Date().getTime() + +responseData.expiresIn * 1000\n    );\n    const user = new CurrentUser(\n      responseData.email,\n      responseData.localId,\n      responseData.idToken,\n      expirationDate\n    );\n    localStorage.setItem('userData', JSON.stringify(user));\n    return AuthActions.authenticateSuccess({\n      email: responseData.email,\n      userId: responseData.localId,\n      token: responseData.idToken,\n      expirationDate,\n    });\n  }\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { CurrentUser } from '@core/models/user';\nimport * as AuthActions from './auth.actions';\n\nexport interface State {\n  user: CurrentUser;\n  error: string;\n  loading: boolean;\n}\n\nconst initialState: State = {\n  user: null,\n  error: null,\n  loading: false,\n};\n\nconst _authReducer = createReducer<State>(\n  initialState,\n\n  on(\n    AuthActions.loginStart,\n    AuthActions.signUpStart,\n    (state, action) => ({\n    ...state,\n    user: null,\n    error: null,\n    loading: true,\n  })),\n\n  on(AuthActions.logout, (state, action) => ({\n    ...state,\n    user: null,\n    uthError: null,\n    loading: false,\n  })),\n\n  on(AuthActions.authenticateSuccess, (state, action) => ({\n    ...state,\n    user: new CurrentUser(\n      action.email,\n      action.userId,\n      action.token,\n      action.expirationDate\n    ),\n    error: null,\n    loading: false,\n  })),\n\n  on(AuthActions.authenticateFail, (state, action) => ({\n    ...state,\n    error: action.errorMessage,\n    loading: false,\n  })),\n\n  on(AuthActions.clearError, (state, action) => ({\n    ...state,\n    error: null,\n  }))\n);\n\nexport const authReducer = (state: State, action: Action): State => _authReducer(state, action);\n","import { createAction, props } from '@ngrx/store';\nimport { Project } from '../../../core/models/project';\n\nexport const fetchProjectsSuccess = createAction(\n  '[Projects] Set Projects',\n  props<{ projects: Project[] }>()\n);\nexport const fetchProjects = createAction('[Projects] Fetch Projects');\n\nexport const fetchProjectsFail = createAction(\n  '[Projects] Fail Fetch Projects',\n  props<{ errorMessage: string }>()\n);\n\nexport const clearError = createAction('[Projects] Clear Error');\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport * as ProjectsActions from './projects.actions';\nimport { switchMap, map, tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Project } from '@core/models/project';\nimport { environment } from 'src/environments/environment';\nimport { AppState } from '@core/models/appState';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectsEffects {\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private store: Store<AppState>\n  ) { }\n  fetchProjects$ = createEffect(\n    (): any =>\n      this.actions$.pipe(\n        ofType(ProjectsActions.fetchProjects),\n        switchMap(() => {\n          return this.http.get<any>(`${environment.API_URL_FIREBASE}.json`);\n        }),\n        map((responseData: any) => {\n          const projectsArray = [];\n          for (const key in responseData) {\n            if (responseData.hasOwnProperty(key)) {\n              projectsArray.push({\n                ...responseData[key],\n                id: key,\n              });\n            }\n          }\n          return projectsArray;\n        }),\n        map((projects: Project[]) => {\n          return this.store.dispatch(\n            ProjectsActions.fetchProjectsSuccess({ projects })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { Project } from '@core/models/project';\nimport * as ProjectsActions from './projects.actions';\n\nexport interface State {\n  projects: Project[];\n  errorMessage: string;\n  loading: boolean;\n}\n\nconst initialState = {\n  projects: [],\n  errorMessage: null,\n  loading: false,\n};\n\nconst _projectsReducer = createReducer(\n  initialState,\n  on(ProjectsActions.fetchProjectsSuccess, (state, action) => ({\n    ...state,\n    projects: [...action.projects],\n    errorMessage: null,\n    loading: false,\n  })),\n  on(ProjectsActions.fetchProjects, (state, action) => ({\n    ...state,\n    errorMessage: null,\n    loading: true,\n  })),\n  on(ProjectsActions.fetchProjectsFail, (state, action) => ({\n    ...state,\n    errorMessage: action.errorMessage,\n    loading: false,\n  })),\n  on(ProjectsActions.clearError, (state, action) => ({\n    ...state,\n    errorMessage: null,\n    loading: false,\n  }))\n);\n\nexport function projectReducer(state: State, action: Action): State {\n  return _projectsReducer(state, action);\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL_FIREBASE: 'https://porfolio-8433c-default-rtdb.firebaseio.com/projects',\n  API_AUTH_FIREBASE_SIGNUP: 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=',\n  API_AUTH_FIREBASE_SIGNIN: 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=',\n  API_KEY_FIREBASE: 'AIzaSyB1i143xgUQYNvO9BOLHh9N-tLLbYicGDI',\n  API_DEV: 'http://localhost:3000/api/projects/',\n  API_AUTH_DEV: 'http://localhost:3000',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","PageNotFoundComponent","routes","path","loadChildren","then","m","LandingPageModule","AdminModule","component","AppRoutingModule","forRoot","imports","i1","exports","AuthActions","AppComponent","constructor","store","ngOnInit","dispatch","autoLogin","i0","ɵɵdirectiveInject","Store","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement","BrowserModule","CoreModule","HttpClientModule","HTTP_INTERCEPTORS","StoreModule","EffectsModule","BrowserAnimationsModule","HeaderInterceptor","ProjectsEffects","fromApp","StoreDevtoolsModule","environment","AuthEffects","ButtonComponent","AppModule","bootstrap","provide","useClass","multi","appReducer","instrument","logOnly","production","declarations","StoreRootModule","i2","EffectsRootModule","i3","CommonModule","SkillsService","DialogType","TechCategory","CurrentUser","email","id","_token","_tokenExpirationDate","token","Date","HttpParams","exhaustMap","map","take","intercept","req","next","select","pipe","authState","user","handle","authReq","clone","params","set","ɵɵinject","factory","ɵfac","inject","HttpClient","AuthService","http","setAutoLogout","expirationDuration","tokenExpirationTimer","setTimeout","logout","clearLogoutTimer","clearTimeout","signUp","password","post","API_AUTH_FIREBASE_SIGNUP","API_KEY_FIREBASE","returnSecureToken","singIn","API_AUTH_FIREBASE_SIGNIN","providedIn","MatDialog","DialogComponent","DialogService","dialog","openDialog","dialogType","Info","data","dialogRef","open","type","closeDialog","close","getDialogRef","startYear","overAllYearsOfExperience","getOverAllYearsOfExperience","skills","name","knowledge","proficient","logo","yearsOfExperience","description","category","Frontend","Backend","Database","Cloud","TestingFramework","getAllSkills","diff","getTime","Math","abs","round","EventEmitter","MaterialModule","clickEvent","triggerEvent","emit","Event","inputs","color","class","outputs","standalone","features","ɵɵStandaloneFeature","ngContentSelectors","_c0","consts","ButtonComponent_Template","ɵɵelementStart","ɵɵlistener","ButtonComponent_Template_button_click_0_listener","ɵɵprojection","ɵɵelementEnd","ɵɵclassMap","ɵɵproperty","MatButton","styles","MAT_DIALOG_DATA","ɵɵelementContainerStart","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r0","error","code","ɵɵtextInterpolate","ctx_r1","message","ctx_r2","ctx_r3","DialogComponent_Template","ɵɵtemplate","DialogComponent_ng_container_0_Template","DialogComponent_ng_container_1_Template","DialogComponent_ng_container_2_Template","DialogComponent_ng_container_3_Template","Error","Success","Warning","PageNotFoundComponent_Template","ɵɵpureFunction0","MatSidenavModule","MatSliderModule","MatGridListModule","MatCardModule","MatMenuModule","MatIconModule","MatButtonModule","LayoutModule","MatToolbarModule","MatListModule","MatTableModule","MatFormFieldModule","MatPaginatorModule","MatInputModule","MatSelectModule","MatProgressSpinnerModule","MatDialogModule","modules","projectsReducer","authReducer","projects","projectReducer","auth","createAction","props","authenticateSuccess","loginStart","signUpStart","authenticateFail","clearError","createEffect","ofType","of","catchError","switchMap","tap","actions$","router","authService","dialogService","dialogEnumType","authSignUp$","action","respData","expiresIn","resData","handleAuthentication","handleError","bind","authLogout$","localStorage","removeItem","authLogin$","userData","JSON","parse","getItem","loadedUser","userId","expirationDate","authSignIn$","authRedirect$","navigate","authRedirectLogout$","errorResponse","errorMessage","responseData","localId","idToken","setItem","stringify","Actions","Router","createReducer","on","initialState","loading","_authReducer","state","uthError","fetchProjectsSuccess","fetchProjects","fetchProjectsFail","ProjectsActions","fetchProjects$","get","API_URL_FIREBASE","projectsArray","key","hasOwnProperty","push","_projectsReducer","API_DEV","API_AUTH_DEV","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","console"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}