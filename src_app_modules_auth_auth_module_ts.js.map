{"version":3,"file":"src_app_modules_auth_auth_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAG2C;;;;AAE3C,MAGaE,eAAe;EAC1BC,YACUC,MAAc,EACdC,KAAsB;IADtB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;EACX;EACJC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACH,KAAK,CAACI,MAAM,CAAC,MAAM,CAAC,CAC7BC,IAAI,CACHT,oDAAI,CAAC,CAAC,CAAC,EACPD,mDAAG,CAAEW,SAAS,IAAKA,SAAS,CAACC,IAAI,CAAC,EAClCZ,mDAAG,CAAEY,IAAI,IAAI;MACX,IAAI,CAACA,IAAI,EAAE;QACT,OAAO,IAAI;;MAEb,OAAO,IAAI,CAACR,MAAM,CAACS,aAAa,CAAC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IACtD,CAAC,CAAC,CACH;EACL;;AApBWX,eAAe;mBAAfA,eAAe,EAAAY,sDAAA,CAAAE,mDAAA,GAAAF,sDAAA,CAAAI,8CAAA;AAAA;AAAfhB,eAAe;SAAfA,eAAe;EAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;EAAAC,UAAA,EAFd;AAAM;;;;;;;;;;;;;;;;;;;;;ACLmC;AAEU;AACM;AACH;AACS;;;AAE7E,MAAMK,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEL,gFAAe;EAC1BlB,WAAW,EAAE,CAACJ,2EAAe,CAAC;EAC9B4B,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,EAAE;IACRG,UAAU,EAAE,OAAO;IACnBC,SAAS,EAAE;GACZ,EACD;IACEJ,IAAI,EAAE,EAAE;IACRC,SAAS,EAAEJ,6EAAcA;GAC1B,EACD;IACEG,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAEH,sFAAiBA;GAC7B;CAEJ,CACF;AAED,MAIaO,iBAAiB;AAAjBA,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA;AAAiB;AAAjBA,iBAAiB;YAHlBV,kEAAqB,CAACI,MAAM,CAAC,EAC7BJ,yDAAY;AAAA;AAEM;;sHAAjBU,iBAAiB;IAAAE,OAAA,GAAAnB,yDAAA;IAAAoB,OAAA,GAFlBb,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AChCuB;AACW;AACa;AACL;AACR;AACU;AACS;;AAE7E,MAUakB,UAAU;AAAVA,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;QAAVA;AAAU;AAAVA,UAAU;YAPnBJ,yDAAY,EACZJ,mEAAiB,EACjBK,+DAAmB,EACnBC,uDAAW,EACXC,+DAAY;AAAA;AAGO;;sHAAVC,UAAU;IAAAC,YAAA,GATNlB,gFAAe,EAAEC,6EAAc,EAAEC,sFAAiB;IAAAS,OAAA,GAE/DE,yDAAY,EACZJ,mEAAiB,EACjBK,+DAAmB,EACnBC,uDAAW,EACXC,+DAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACdhB,MAKahB,eAAe;EAE1BrB,YAAA,GAAgB;EAEhBwC,QAAQA,CAAA,GACR;;AALWnB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP5BpC,uDAAA,uBAAqC;MACrCA,4DAAA,kCAA6B;MAEzBA,uDAAA,aAAuB;MAEvBA,4DAAA,aAAmC;MAGNA,oDAAA,2BAAoB;MAAAA,0DAAA,EAAK;MAChDA,4DAAA,aAAuB;MAAAA,oDAAA,4BAAoB;MAAAA,0DAAA,EAAK;MAChDA,uDAAA,qBAA+B;MACjCA,0DAAA,EAAM;MACNA,4DAAA,aAAuB;MACrBA,uDAAA,UAAS;MAUXA,0DAAA,EAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBwD;AAM7C;AAEsD;AAErC;AACa;;;;;;;;;;ICetDA,uDAAA,uBAAuD;;;ADbvD,MAKaW,cAAc;EAMzBtB,YAAoBE,KAAsB;IAAtB,KAAAA,KAAK,GAALA,KAAK;IALjB,KAAAD,MAAM,GAAGoD,qDAAM,CAACvC,mDAAM,CAAC;IAC/B,KAAA6C,cAAc,GAAGD,gEAAU;IAG3B,KAAAE,SAAS,GAAG,KAAK;IAEf,IAAI,CAACC,SAAS,EAAE;EAClB;EACArB,QAAQA,CAAA;IACN,IAAI,CAACsB,SAAS,GAAG,IAAI,CAAC5D,KAAK,CAACI,MAAM,CAAC,MAAM,CAAC,CAACyD,SAAS,CAAEC,QAAQ,IAAI;MAChE,IAAI,CAACJ,SAAS,GAAGI,QAAQ,CAACC,OAAO;IACnC,CAAC,CAAC;EACJ;EACAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACC,UAAU,CAACC,OAAO,EAAE;MAC3B,IAAI,CAACD,UAAU,CAACE,gBAAgB,EAAE;MAClC;;IAEF,MAAMC,KAAK,GAAG,IAAI,CAACH,UAAU,CAACI,KAAK,CAACD,KAAK;IACzC,MAAME,QAAQ,GAAG,IAAI,CAACL,UAAU,CAACI,KAAK,CAACC,QAAQ;IAC/C,IAAI,CAACZ,SAAS,GAAG,IAAI;IACrB,IAAI,CAAC1D,KAAK,CAACuE,QAAQ,CAAChB,2EAAsB,CAAC;MAAEa,KAAK;MAAEE;IAAQ,CAAE,CAAC,CAAC;EAClE;EAEAG,MAAMA,CAAA;IACJ,IAAI,CAAC1E,MAAM,CAAC2E,QAAQ,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;EACjD;EAEA,IAAIN,KAAKA,CAAA;IACP,OAAO,IAAI,CAACH,UAAU,CAACU,GAAG,CAAC,OAAO,CAAC;EACrC;EACA,IAAIL,QAAQA,CAAA;IACV,OAAO,IAAI,CAACL,UAAU,CAACU,GAAG,CAAC,UAAU,CAAC;EACxC;EACQhB,SAASA,CAAA;IACf,IAAI,CAACM,UAAU,GAAG,IAAIZ,qDAAS,CAAC;MAC9Be,KAAK,EAAE,IAAIhB,uDAAW,CAAC,EAAE,EAAE,CACzBE,+DAAmB,EACnBA,4DAAgB,CACjB,CAAC;MACFgB,QAAQ,EAAE,IAAIlB,uDAAW,CAAC,EAAE,EAAE,CAACE,+DAAmB,CAAC;KACpD,CAAC;EACJ;EACAuB,WAAWA,CAAA;IACT,IAAI,IAAI,CAACjB,SAAS,EAAE;MAClB,IAAI,CAACA,SAAS,CAACkB,WAAW,EAAE;;EAEhC;;AAhDW1D,cAAc;mBAAdA,cAAc,EAAAX,+DAAA,CAAAE,8CAAA;AAAA;AAAdS,cAAc;QAAdA,cAAc;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAqC,wBAAAnC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MClB3BpC,4DAAA,cAAoE;MAAjDA,wDAAA,sBAAAyE,iDAAA;QAAA,OAAYpC,GAAA,CAAAkB,QAAA,EAAU;MAAA,EAAC;MACxCvD,4DAAA,aAAkB;MAChBA,uDAAA,eAAkE;MAIpEA,0DAAA,EAAM;MAENA,4DAAA,aAAkB;MAChBA,uDAAA,eAA2E;MAI7EA,0DAAA,EAAM;MAENA,uDAAA,SAAM;MACNA,4DAAA,0BAA+D;MAC7DA,oDAAA,gBACF;MAAAA,0DAAA,EAAmB;MAErBA,4DAAA,eAAiC;MAAAA,oDAAA,2BAAmB;MAAAA,0DAAA,EAAO;MAC3DA,4DAAA,2BAA0D;MAAxCA,wDAAA,wBAAA0E,gEAAA;QAAA,OAAcrC,GAAA,CAAA2B,MAAA,EAAQ;MAAA,EAAC;MACvChE,oDAAA,kBACF;MAAAA,0DAAA,EAAmB;MAGnBA,wDAAA,KAAA4E,2CAAA,8BAAuD;;;MA1BZ5E,wDAAA,cAAAqC,GAAA,CAAAmB,UAAA,CAAwB;MAI1BxD,uDAAA,GAAmC;MAAnCA,wDAAA,YAAAqC,GAAA,CAAAmB,UAAA,CAAAU,GAAA,UAAmC;MAOnClE,uDAAA,GAAsC;MAAtCA,wDAAA,YAAAqC,GAAA,CAAAmB,UAAA,CAAAU,GAAA,aAAsC;MAe5DlE,uDAAA,GAAe;MAAfA,wDAAA,SAAAqC,GAAA,CAAAY,SAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BmC;AACD;AAGU;AACrC;AAEiB;;;;;;;;;;ICmCpDjD,uDAAA,8CAKuC;;;;IADrCA,wDAAA,YAAAgF,MAAA,CAAAC,UAAA,CAAsB;;;;;IAe9BjF,uDAAA,uBAAuD;;;ADrDvD,MAKaY,iBAAiB;EAE5BvB,YAAoBE,KAAsB;IAAtB,KAAAA,KAAK,GAALA,KAAK;IADjB,KAAAD,MAAM,GAAGoD,qDAAM,CAACvC,mDAAM,CAAC;IAM/B,KAAA8C,SAAS,GAAG,KAAK;IAJf,IAAI,CAACC,SAAS,EAAE;EAClB;EAKArB,QAAQA,CAAA;IACN,IAAI,CAACqD,SAAS,GAAG,IAAI,CAAC3F,KAAK,CAACI,MAAM,CAAC,MAAM,CAAC,CAACyD,SAAS,CAAEC,QAAQ,IAAI;MAChE,IAAI,CAACJ,SAAS,GAAGI,QAAQ,CAACC,OAAO;MACjC,IAAI,CAAC6B,KAAK,GAAG9B,QAAQ,CAAC8B,KAAK;IAC7B,CAAC,CAAC;EACJ;EACA5B,QAAQA,CAAA;IACN,IAAI,IAAI,CAAC0B,UAAU,CAACxB,OAAO,EAAE;MAC3B,IAAI,CAACwB,UAAU,CAACvB,gBAAgB,EAAE;MAClC;;IAEF,MAAMC,KAAK,GAAG,IAAI,CAACsB,UAAU,CAACrB,KAAK,CAACD,KAAK;IACzC,MAAME,QAAQ,GAAG,IAAI,CAACoB,UAAU,CAACrB,KAAK,CAACC,QAAQ;IAC/C,IAAI,CAACtE,KAAK,CAACuE,QAAQ,CAAChB,4EAAuB,CAAC;MAAEa,KAAK;MAAEE;IAAQ,CAAE,CAAC,CAAC;EACnE;EACAwB,YAAYA,CAAA;IACV,IAAI,CAAC9F,KAAK,CAACuE,QAAQ,CAAChB,2EAAsB,EAAE,CAAC;EAC/C;EAEAyC,MAAMA,CAAA;IACJ,IAAI,CAACjG,MAAM,CAAC2E,QAAQ,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;EACrC;EACA,IAAIN,KAAKA,CAAA;IACP,OAAO,IAAI,CAACsB,UAAU,CAACf,GAAG,CAAC,OAAO,CAAC;EACrC;EACA,IAAIL,QAAQA,CAAA;IACV,OAAO,IAAI,CAACoB,UAAU,CAACf,GAAG,CAAC,UAAU,CAAC;EACxC;EACA,IAAIsB,iBAAiBA,CAAA;IACnB,OAAO,IAAI,CAACP,UAAU,CAACf,GAAG,CAAC,mBAAmB,CAAC;EACjD;EAEQhB,SAASA,CAAA;IACf,IAAI,CAAC+B,UAAU,GAAG,IAAIrC,qDAAS,CAAC;MAC9Be,KAAK,EAAE,IAAIhB,uDAAW,CAAC,EAAE,EAAE,CAACE,+DAAmB,EAAEA,4DAAgB,CAAC,CAAC;MACnEgB,QAAQ,EAAE,IAAIlB,uDAAW,CAAC,EAAE,EAAE,CAACE,+DAAmB,CAAC,CAAC;MACpD2C,iBAAiB,EAAE,IAAI7C,uDAAW,CAAC,EAAE,EAAE,CAACE,+DAAmB,CAAC;KAC7D,EAAE;MACD4C,UAAU,EAAEV,wEAA+BW;KAC5C,CAAC;EACJ;EACAtB,WAAWA,CAAA;IACT,IAAI,IAAI,CAACc,SAAS,EAAE;MAClB,IAAI,CAACA,SAAS,CAACb,WAAW,EAAE;;EAEhC;;AAtDWzD,iBAAiB;mBAAjBA,iBAAiB,EAAAZ,+DAAA,CAAAE,8CAAA;AAAA;AAAjBU,iBAAiB;QAAjBA,iBAAiB;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAyD,2BAAAvD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCb9BpC,4DAAA,cAAoE;MAAxBA,wDAAA,sBAAA4F,oDAAA;QAAA,OAAYvD,GAAA,CAAAkB,QAAA,EAAU;MAAA,EAAC;MACjEvD,4DAAA,aAAkB;MAChBA,uDAAA,eAOE;MAKJA,0DAAA,EAAM;MAENA,4DAAA,aAAkB;MAChBA,uDAAA,eAKE;MAKJA,0DAAA,EAAM;MAENA,4DAAA,aAAkB;MAChBA,uDAAA,eAKE;MACFA,4DAAA,aAA2B;MACzBA,uDAAA,8CAGuC;MAEvCA,wDAAA,KAAA6F,iEAAA,iDAKuC;MACzC7F,0DAAA,EAAM;MAGRA,uDAAA,UAAM;MACNA,4DAAA,4BACG;MAAAA,oDAAA,eAAO;MAAAA,0DAAA,EACT;MAEHA,4DAAA,gBAAiC;MAAAA,oDAAA,mCAA2B;MAAAA,0DAAA,EAAO;MACnEA,4DAAA,4BACG;MAD+BA,wDAAA,wBAAA8F,mEAAA;QAAA,OAAczD,GAAA,CAAAkD,MAAA,EAAQ;MAAA,EAAC;MACtDvF,oDAAA,iBACH;MAAAA,0DAAA,EAAmB;MAEnBA,wDAAA,KAAA+F,8CAAA,+BAAuD;;;MA7DpC/F,wDAAA,cAAAqC,GAAA,CAAA4C,UAAA,CAAwB;MAWrCjF,uDAAA,GAAiB;MAAjBA,wDAAA,YAAAqC,GAAA,CAAAsB,KAAA,CAAiB;MAajB3D,uDAAA,GAAoB;MAApBA,wDAAA,YAAAqC,GAAA,CAAAwB,QAAA,CAAoB;MAclB7D,uDAAA,GAA6B;MAA7BA,wDAAA,YAAAqC,GAAA,CAAAmD,iBAAA,CAA6B;MAK5BxF,uDAAA,GAGT;MAHSA,wDAAA,UAAAqC,GAAA,CAAAmD,iBAAA,kBAAAnD,GAAA,CAAAmD,iBAAA,CAAAQ,OAAA,MAAA3D,GAAA,CAAA4C,UAAA,kBAAA5C,GAAA,CAAA4C,UAAA,CAAAgB,QAAA,oBAGT;MAemBjG,uDAAA,GAAe;MAAfA,wDAAA,SAAAqC,GAAA,CAAAY,SAAA,CAAe;;;;;;;;;;;;;;;;;;;;AC3D5B,MAAO8B,gBAAgB;EAE3B,OAAOW,cAAcA,CAACQ,OAAwB;IAC5C,MAAMrC,QAAQ,GAAGqC,OAAO,EAAEhC,GAAG,CAAC,UAAU,CAAC,EAAEN,KAAK;IAChD,MAAMuC,eAAe,GAAGD,OAAO,EAAEhC,GAAG,CAAC,mBAAmB,CAAC,EAAEN,KAAK;IAChE,IAAIC,QAAQ,KAAKsC,eAAe,EAAE;MAChC,OAAO;QAAEC,cAAc,EAAE;MAAI,CAAE;;IAEjC,OAAO,IAAI;EACb","sources":["./src/app/core/guards/redirect-to.guard.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/components/layout/layout.component.ts","./src/app/modules/auth/components/layout/layout.component.html","./src/app/modules/auth/components/login/login.component.ts","./src/app/modules/auth/components/login/login.component.html","./src/app/modules/auth/components/register/register.component.ts","./src/app/modules/auth/components/register/register.component.html","./src/app/validators/index.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { map, take } from 'rxjs/operators';\nimport { AppState } from '@core/models/appState';\n@Injectable({\n  providedIn: 'root',\n})\nexport class RedirectToGuard {\n  constructor(\n    private router: Router,\n    private store: Store<AppState>\n  ) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): any {\n    return this.store.select('auth')\n      .pipe(\n        take(1),\n        map((authState) => authState.user),\n        map((user) => {\n          if (!user) {\n            return true;\n          }\n          return this.router.createUrlTree(['/', 'dashboard']);\n        })\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '@core/guards/auth.guard';\nimport { RedirectToGuard } from '@core/guards/redirect-to.guard';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    canActivate: [RedirectToGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: '/auth',\n        pathMatch: 'full',\n      },\n      {\n        path: '',\n        component: LoginComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n@NgModule({\n  declarations: [LayoutComponent, LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule,\n  ],\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'portfolio-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<portfolio-navbar></portfolio-navbar>\n<portfolio-wrapper-container>\n  <div class=\"main-container\">\n    <div class=\"top\"></div>\n    <div class=\"bottom\"></div>\n    <div class=\"main-container__forms\">\n      <div class=\"wrapper\">\n        <div class=\"container\">\n          <h1 class=\"text-white\">Welcome David Duarte</h1>\n          <h1 class=\"text-white\">to your admin Module</h1>\n          <router-outlet></router-outlet>\n        </div>\n        <ul class=\"bg-bubbles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</portfolio-wrapper-container>\n","import { Component, OnDestroy, OnInit, inject } from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as AuthActions from '../../../../store/operations/auth/auth.actions';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\nimport { DialogType } from '@core/models/dialog.enum';\nimport { AppState } from '@core/models/appState';\n@Component({\n  selector: 'portfolio-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  private router = inject(Router);\n  dialogTypeEnum = DialogType;\n  signInForm!: FormGroup;\n  signInSub!: Subscription;\n  isLoading = false;\n  constructor(private store: Store<AppState>) {\n    this.buildForm();\n  }\n  ngOnInit(): void {\n    this.signInSub = this.store.select('auth').subscribe((authResp) => {\n      this.isLoading = authResp.loading;\n    });\n  }\n  onSubmit(): void {\n    if (this.signInForm.invalid) {\n      this.signInForm.markAllAsTouched();\n      return;\n    }\n    const email = this.signInForm.value.email;\n    const password = this.signInForm.value.password;\n    this.isLoading = true;\n    this.store.dispatch(AuthActions.loginStart({ email, password }));\n  }\n\n  signUp() {\n    this.router.navigate(['/', 'auth', 'register'])\n  }\n\n  get email(): AbstractControl {\n    return this.signInForm.get('email');\n  }\n  get password(): AbstractControl {\n    return this.signInForm.get('password');\n  }\n  private buildForm(): void {\n    this.signInForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email,\n      ]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n  ngOnDestroy(): void {\n    if (this.signInSub) {\n      this.signInSub.unsubscribe();\n    }\n  }\n}\n","<form class=\"form\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"signInForm\">\n  <div class=\"mb-4\">\n    <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" />\n\n    <portfolio-error-validation-mesasage [control]=\"signInForm.get('email')\" name=\"Email\">\n    </portfolio-error-validation-mesasage>\n  </div>\n\n  <div class=\"mb-4\">\n    <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" />\n\n    <portfolio-error-validation-mesasage [control]=\"signInForm.get('password')\" name=\"Password\">\n    </portfolio-error-validation-mesasage>\n  </div>\n\n  <br />\n  <portfolio-button type='submit' color=\"warn\" class=\"w-[250px]\">\n    Sign In\n  </portfolio-button>\n</form>\n<span class=\"text-gray-200 mr-2\">Do have an account?</span>\n<portfolio-button (clickEvent)=\"signUp()\" color=\"primary\">\n  Sign up\n</portfolio-button>\n\n\n<portfolio-loader *ngIf=\"isLoading\"></portfolio-loader>","import { Component, OnDestroy, OnInit, inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport * as AuthActions from '../../../../store/operations/auth/auth.actions';\nimport { Router } from '@angular/router';\nimport { AppState } from '@core/models/appState';\nimport { CustomValidators } from \"../../../../validators\";\n@Component({\n  selector: 'portfolio-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  private router = inject(Router);\n  constructor(private store: Store<AppState>) {\n    this.buildForm();\n  }\n  signUpForm!: FormGroup;\n  signUpSub!: Subscription;\n  isLoading = false;\n  error!: string;\n  ngOnInit(): void {\n    this.signUpSub = this.store.select('auth').subscribe((authResp) => {\n      this.isLoading = authResp.loading;\n      this.error = authResp.error;\n    });\n  }\n  onSubmit(): void {\n    if (this.signUpForm.invalid) {\n      this.signUpForm.markAllAsTouched();\n      return;\n    }\n    const email = this.signUpForm.value.email;\n    const password = this.signUpForm.value.password;\n    this.store.dispatch(AuthActions.signUpStart({ email, password }));\n  }\n  onClearError(): void {\n    this.store.dispatch(AuthActions.clearError());\n  }\n\n  signIn() {\n    this.router.navigate(['/', 'auth'])\n  }\n  get email() {\n    return this.signUpForm.get('email');\n  }\n  get password() {\n    return this.signUpForm.get('password');\n  }\n  get confirmedPassword() {\n    return this.signUpForm.get('confirmedPassword');\n  }\n\n  private buildForm(): void {\n    this.signUpForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n      confirmedPassword: new FormControl('', [Validators.required]),\n    }, {\n      validators: CustomValidators.matchPasswords\n    });\n  }\n  ngOnDestroy(): void {\n    if (this.signUpSub) {\n      this.signUpSub.unsubscribe();\n    }\n  }\n}\n","<form class=\"form\" [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"mb-4\">\n    <input\n      type=\"email\"\n      placeholder=\"Email\"\n      type=\"text\"\n      formControlName=\"email\"\n      name=\"email\"\n      id=\"username\"\n    />\n    <portfolio-error-validation-mesasage\n      [control]=\"email\"\n      name=\"Email\"\n    ></portfolio-error-validation-mesasage>\n  </div>\n\n  <div class=\"mb-4\">\n    <input\n      formControlName=\"password\"\n      type=\"password\"\n      placeholder=\"Password\"\n      name=\"password\"\n    />\n    <portfolio-error-validation-mesasage\n      [control]=\"password\"\n      name=\"Password\"\n    ></portfolio-error-validation-mesasage>\n  </div>\n\n  <div class=\"mb-4\">\n    <input\n      formControlName=\"confirmedPassword\"\n      type=\"password\"\n      placeholder=\"Confirme Password\"\n      name=\"confirmedPassword\"\n    />\n    <div class=\"flex flex-col\">\n      <portfolio-error-validation-mesasage\n        [control]=\"confirmedPassword\"\n        name=\"Confirme Password\"\n      ></portfolio-error-validation-mesasage>\n\n      <portfolio-error-validation-mesasage\n        *ngIf=\"\n          confirmedPassword?.touched && signUpForm?.hasError('match_password')\n        \"\n        [control]=\"signUpForm\"\n      ></portfolio-error-validation-mesasage>\n    </div>\n  </div>\n\n  <br />\n  <portfolio-button type=\"submit\" color=\"warn\" class=\"w-[250px]\"\n    >Sign up</portfolio-button\n  >\n</form>\n<span class=\"text-gray-200 mr-2\">Do not have an account yet?</span>\n<portfolio-button color=\"primary\" (clickEvent)=\"signIn()\"\n  >Sign In\n</portfolio-button>\n\n<portfolio-loader *ngIf=\"isLoading\"></portfolio-loader>\n","import { AbstractControl } from '@angular/forms';\n\nexport class CustomValidators {\n\n  static matchPasswords(control: AbstractControl) {\n    const password = control?.get('password')?.value;\n    const confirmPassword = control?.get('confirmedPassword')?.value;\n    if (password !== confirmPassword) {\n      return { match_password: true };\n    }\n    return null;\n  }\n}\n"],"names":["map","take","RedirectToGuard","constructor","router","store","canActivate","route","state","select","pipe","authState","user","createUrlTree","i0","ɵɵinject","i1","Router","i2","Store","factory","ɵfac","providedIn","RouterModule","LayoutComponent","LoginComponent","RegisterComponent","routes","path","component","children","redirectTo","pathMatch","AuthRoutingModule","forChild","imports","exports","CommonModule","ReactiveFormsModule","FormsModule","SharedModule","AuthModule","declarations","ngOnInit","selectors","decls","vars","consts","template","LayoutComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","inject","FormControl","FormGroup","Validators","AuthActions","DialogType","dialogTypeEnum","isLoading","buildForm","signInSub","subscribe","authResp","loading","onSubmit","signInForm","invalid","markAllAsTouched","email","value","password","dispatch","loginStart","signUp","navigate","get","required","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","LoginComponent_Template","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","LoginComponent_Template_portfolio_button_clickEvent_12_listener","ɵɵtemplate","LoginComponent_portfolio_loader_14_Template","ɵɵproperty","ɵɵadvance","CustomValidators","ctx_r0","signUpForm","signUpSub","error","signUpStart","onClearError","clearError","signIn","confirmedPassword","validators","matchPasswords","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_0_listener","RegisterComponent_portfolio_error_validation_mesasage_11_Template","RegisterComponent_Template_portfolio_button_clickEvent_17_listener","RegisterComponent_portfolio_loader_19_Template","touched","hasError","control","confirmPassword","match_password"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}