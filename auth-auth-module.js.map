{"version":3,"sources":["./src/app/admin/auth/components/login/login.component.ts","./src/app/admin/auth/components/login/login.component.html","./src/app/admin/auth/auth-routing.module.ts","./src/app/admin/auth/auth.module.ts","./src/app/admin/auth/components/layout/layout.component.ts","./src/app/admin/auth/components/layout/layout.component.html","./src/app/admin/auth/components/register/register.component.ts","./src/app/admin/auth/components/register/register.component.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKwB;AAGgC;;;;;;;;;ICRtD,4EAAiE;;;;IACjE,yEAKC;IACC,uDACA;IAAA,4EAAuE;IAAvC,qTAAwB;IACtD,kEACF;IAAA,4DAAS;IACX,4DAAM;;;IAJJ,0DACA;IADA,wFACA;;;IAYE,2EAAgE;IAC9D,oFACF;IAAA,4DAAO;;;IAGT,uEACG;IAAA,qFAA0B;IAAA,4DAC5B;;;;IAfH,0EAKC;IAFC,sTAAuB;IAGvB,sEAAK;IACH,sEAAkE;IAClE,mHAEO;IACT,4DAAM;IACN,uEAA2E;IAC3E,oHAEC;IACD,gEAAM;IACN,6EAAuE;IACrE,oEACF;IAAA,4DAAS;IACX,4DAAO;;;IAhBL,wFAAwB;IAIK,0DAAmC;IAAnC,6GAAmC;IAKzD,0DAAyC;IAAzC,mHAAyC;IAIxC,0DAA8B;IAA9B,8FAA8B;;;ADdnC,MAAM,cAAc;IAKzB,YAAoB,KAA8B;QAA9B,UAAK,GAAL,KAAK,CAAyB;QADlD,cAAS,GAAG,KAAK,CAAC;QAEhB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAChE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,QAAQ;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;QAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,8DAAsB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;IACnE,CAAC;IACD,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,8DAAsB,EAAE,CAAC,CAAC;IAChD,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IACO,SAAS;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,KAAK,EAAE,IAAI,0DAAW,CAAC,6BAA6B,EAAE;gBACpD,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,KAAK;aACjB,CAAC;YACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SAC9B;IACH,CAAC;;4EA1CU,cAAc;8FAAd,cAAc;QChB3B,wEAAc;QACZ,0HAAiE;QACjE,0GAUM;QACN,4GAoBO;QACP,uEAAM;QAAA,8EAAmB;QAAA,4DAAO;QAAC,8DACjC;QAAA,4EAKC;QACC,oEACF;QAAA,4DAAS;QACX,qEAAe;;QA1CC,0DAAe;QAAf,+EAAe;QAG1B,0DAAW;QAAX,2EAAW;QAUX,0DAAgB;QAAhB,gFAAgB;QAwBjB,0DAAiB;QAAjB,0EAAiB;;;;;;;;;;;;;;ACrCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACH;AAEmB;AACH;AACS;;;AAE7E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mFAAe;QAC1B,kCAAkC;QAClC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,iBAAiB;gBAC7B,SAAS,EAAE,MAAM;aAClB;YACD;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,gFAAc;aAC1B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,WAAW,EAAE,CAAC,iEAAS,CAAC;gBACxB,SAAS,EAAE,yFAAiB;aAC7B;SACF;KACF;CACF,CAAC;AAMK,MAAM,iBAAiB;;kFAAjB,iBAAiB;gGAAjB,iBAAiB;oGAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;;;;;;;;;;;;;ACjCxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACW;AACa;AACL;AACR;AACU;AACS;;AAYtE,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FARZ;YACP,4DAAY;YACZ,sEAAiB;YACjB,kEAAmB;YACnB,0DAAW;YACX,kEAAY;SACb;mIAEU,UAAU,mBATN,mFAAe,EAAE,gFAAc,EAAE,yFAAiB,aAE/D,4DAAY;QACZ,sEAAiB;QACjB,kEAAmB;QACnB,0DAAW;QACX,kEAAY;;;;;;;;;;;;;;;;;;;ACTT,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEAA4B;QAC1B,oEAAuB;QACvB,oEAA0B;QAC1B,yEAAmC;QACjC,yEAAqB;QACnB,yEAAuB;QACrB,wEAAuB;QAAA,+EAAoB;QAAA,4DAAK;QAChD,wEAAuB;QAAA,+EAAoB;QAAA,4DAAK;QAChD,4EAA+B;QACjC,4DAAM;QACN,yEAAuB;QACrB,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,iEAAS;QACX,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;ACvBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAIZ;;;;;;;;ICJtD,4EAAiE;;;;IACjE,yEAKC;IACC,uDACA;IAAA,4EAAuE;IAAzB,wTAAwB;IACpE,kEACF;IAAA,4DAAS;IACX,4DAAM;;;IAJJ,0DACA;IADA,wFACA;;;IAkBA,2EACG;IAAA,gFAAqB;IAAA,4DACvB;;;IAOD,2EACG;IAAA,iFAAsB;IAAA,4DACxB;;;IAMD,2EACG;IAAA,oFAAyB;IAAA,4DAC3B;;;;IAjCH,0EAKC;IADC,yTAAuB;IAEvB,sEAOE;IACF,sHAEC;IACD,uEAKE;IACF,sHAEC;IACD,gEAAM;IACN,6EAAuE;IACrE,oEACF;IAAA,4DAAS;IACT,gEAAM;IACN,sHAEC;IACH,4DAAO;;;IA/BL,wFAAwB;IAWjB,0DAAmC;IAAnC,6GAAmC;IASnC,0DAAyC;IAAzC,mHAAyC;IAIxC,0DAA8B;IAA9B,8FAA8B;IAI/B,0DAA6C;IAA7C,uHAA6C;;;ADjCjD,MAAM,iBAAiB;IAC5B,YAAoB,KAA8B;QAA9B,UAAK,GAAL,KAAK,CAAyB;QAKlD,cAAS,GAAG,KAAK,CAAC;QAJhB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAKD,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAChE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,QAAQ;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;QAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,+DAAuB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;IACpE,CAAC;IACD,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,8DAAsB,EAAE,CAAC,CAAC;IAChD,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SAC9B;IACH,CAAC;;kFAvCU,iBAAiB;iGAAjB,iBAAiB;QCX9B,wEAAc;QACZ,6HAAiE;QACjE,6GAUM;QACN,gHAkCO;QACP,uEAAM;QAAA,sFAA2B;QAAA,4DAAO;QACxC,uEAA4E;QAC1E,oEACF;QAAA,4DAAI;QACN,qEAAe;;QAnDC,0DAAe;QAAf,+EAAe;QAE1B,0DAAW;QAAX,2EAAW;QAWX,0DAAgB;QAAhB,gFAAgB;QAmCuB,0DAAiC;QAAjC,6IAAiC","file":"auth-auth-module.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as fromApp from '../../../../store/app.reduce';\nimport * as AuthActions from '../../store/auth.actions';\nimport { Store } from '@ngrx/store';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  signInForm!: FormGroup;\n  signInSub!: Subscription;\n  error!: string;\n  isLoading = false;\n  constructor(private store: Store<fromApp.AppState>) {\n    this.buildForm();\n  }\n  ngOnInit(): void {\n    this.signInSub = this.store.select('auth').subscribe((authResp) => {\n      this.isLoading = authResp.loading;\n      this.error = authResp.authError;\n    });\n  }\n  onSubmit(): void {\n    const email = this.signInForm.value.email;\n    const password = this.signInForm.value.password;\n    this.isLoading = true;\n    this.store.dispatch(AuthActions.loginStart({ email, password }));\n  }\n  onClearError(): void {\n    this.store.dispatch(AuthActions.clearError());\n  }\n  get email(): AbstractControl {\n    return this.signInForm.get('email');\n  }\n  get password(): AbstractControl {\n    return this.signInForm.get('password');\n  }\n  private buildForm(): void {\n    this.signInForm = new FormGroup({\n      email: new FormControl('david@duartechsolutions.com', [\n        Validators.required,\n        Validators.email,\n      ]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n  ngOnDestroy(): void {\n    if (this.signInSub) {\n      this.signInSub.unsubscribe();\n    }\n  }\n}\n","<ng-container>\n  <mat-spinner *ngIf=\"isLoading\" class=\"m-auto my-5\"></mat-spinner>\n  <div\n    style=\"z-index: 10\"\n    *ngIf=\"error\"\n    class=\"alert alert-warning\"\n    role=\"alert\"\n  >\n    {{ error }}\n    <button class=\"btn btn-primary\" (click)=\"onClearError()\" type=\"button\">\n      Close\n    </button>\n  </div>\n  <form\n    *ngIf=\"!isLoading\"\n    class=\"form\"\n    (ngSubmit)=\"onSubmit()\"\n    [formGroup]=\"signInForm\"\n  >\n    <div>\n      <input formControlName=\"email\" type=\"email\" placeholder=\"Email\" />\n      <span class=\"text-danger\" *ngIf=\"!email.valid && email.touched\">\n        This email is not valid\n      </span>\n    </div>\n    <input formControlName=\"password\" type=\"password\" placeholder=\"Password\" />\n    <span *ngIf=\"!password.valid && password.touched\"\n      >This password is not valid</span\n    >\n    <br />\n    <button [disabled]=\"!signInForm.valid\" type=\"submit\" id=\"login-button\">\n      Sign In\n    </button>\n  </form>\n  <span>Do have an account?</span> |\n  <button\n    id=\"form-link\"\n    mat-raised-button\n    [disabled]=\"true\"\n    [routerLink]=\"['/', 'dashboard', 'auth', 'register']\"\n  >\n    Sign up\n  </button>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '@core/guards/auth.guard';\nimport { RedirectToGuard } from '@core/guards/redirect-to.guard';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    // canActivate: [RedirectToGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: '/dashboard/auth',\n        pathMatch: 'full',\n      },\n      {\n        path: '',\n        component: LoginComponent,\n      },\n      {\n        path: 'register',\n        canActivate: [AuthGuard],\n        component: RegisterComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n@NgModule({\n  declarations: [LayoutComponent, LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule,\n  ],\n})\nexport class AuthModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\">\n  <div class=\"top\"></div>\n  <div class=\"bottom\"></div>\n  <div class=\"main-container__forms\">\n    <div class=\"wrapper\">\n      <div class=\"container\">\n        <h1 class=\"text-white\">Welcome David Duarte</h1>\n        <h1 class=\"text-white\">to your admin Module</h1>\n        <router-outlet></router-outlet>\n      </div>\n      <ul class=\"bg-bubbles\">\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport * as fromApp from '../../../../store/app.reduce';\nimport * as AuthActions from '../../store/auth.actions';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  constructor(private store: Store<fromApp.AppState>) {\n    this.buildForm();\n  }\n  signUpForm!: FormGroup;\n  signUpSub!: Subscription;\n  isLoading = false;\n  error!: string;\n  ngOnInit(): void {\n    this.signUpSub = this.store.select('auth').subscribe((authResp) => {\n      this.isLoading = authResp.loading;\n      this.error = authResp.authError;\n    });\n  }\n  onSubmit(): void {\n    const email = this.signUpForm.value.email;\n    const password = this.signUpForm.value.password;\n    this.store.dispatch(AuthActions.signUpStart({ email, password }));\n  }\n  onClearError(): void {\n    this.store.dispatch(AuthActions.clearError());\n  }\n  get email(): any {\n    return this.signUpForm.get('email');\n  }\n  get password(): any {\n    return this.signUpForm.get('password');\n  }\n\n  private buildForm(): void {\n    this.signUpForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n  ngOnDestroy(): void {\n    if (this.signUpSub) {\n      this.signUpSub.unsubscribe();\n    }\n  }\n}\n","<ng-container>\n  <mat-spinner *ngIf=\"isLoading\" class=\"m-auto my-5\"></mat-spinner>\n  <div\n    *ngIf=\"error\"\n    style=\"z-index: 10\"\n    class=\"alert alert-warning\"\n    role=\"alert\"\n  >\n    {{ error }}\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"onClearError()\">\n      Close\n    </button>\n  </div>\n  <form\n    *ngIf=\"!isLoading\"\n    class=\"form\"\n    [formGroup]=\"signUpForm\"\n    (ngSubmit)=\"onSubmit()\"\n  >\n    <input\n      type=\"email\"\n      placeholder=\"Email\"\n      type=\"text\"\n      formControlName=\"email\"\n      name=\"email\"\n      id=\"username\"\n    />\n    <span *ngIf=\"!email.valid && email.touched\" class=\"text-danger\"\n      >this field is invalid</span\n    >\n    <input\n      formControlName=\"password\"\n      type=\"password\"\n      placeholder=\"Password\"\n      name=\"password\"\n    />\n    <span *ngIf=\"!password.valid && password.touched\" class=\"text-danger\"\n      >this field is required</span\n    >\n    <br />\n    <button [disabled]=\"!signUpForm.valid\" type=\"submit\" id=\"login-button\">\n      Sign up\n    </button>\n    <br />\n    <span *ngIf=\"!signUpForm.valid && signUpForm.touched\" class=\"text-danger\"\n      >this form data is invalid</span\n    >\n  </form>\n  <span>Do not have an account yet?</span>\n  <a id=\"form-link\" class=\"ml-2 text-white\" [routerLink]=\"['/', 'dashboard']\">\n    Sign In\n  </a>\n</ng-container>\n"],"sourceRoot":"webpack:///"}